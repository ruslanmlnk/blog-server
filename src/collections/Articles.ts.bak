import { anyone } from '@/app/access/anyone'
import { authenticated } from '@/app/access/authenticated'

import type { CollectionConfig } from 'payload'
import { lexicalEditor } from '@payloadcms/richtext-lexical'
import { TextSizeFeature } from "payload-lexical-typography";
// üî† –ü—Ä–æ—Å—Ç–∏–π –º–∞–ø—ñ–Ω–≥ –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—ó —Ä–æ—Å—ñ–π—Å—å–∫–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤
function transliterate(text: string): string {
  const map: Record<string, string> = {
    –∞: 'a', –±: 'b', –≤: 'v', –≥: 'g', –¥: 'd', –µ: 'e', —ë: 'yo', –∂: 'zh', –∑: 'z',
    –∏: 'i', –π: 'y', –∫: 'k', –ª: 'l', –º: 'm', –Ω: 'n', –æ: 'o', –ø: 'p', —Ä: 'r',
    —Å: 's', —Ç: 't', —É: 'u', —Ñ: 'f', —Ö: 'h', —Ü: 'ts', —á: 'ch', —à: 'sh',
    —â: 'sch', —ä: '', —ã: 'y', —å: '', —ç: 'e', —é: 'yu', —è: 'ya',
  }
  return text
    .toLowerCase()
    .split('')
    .map(char => map[char] ?? char)
    .join('')
    .replace(/[^a-z0-9\s-]/g, '') // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∑–∞–π–≤–µ
    .trim()
    .replace(/\s+/g, '-') // –ø—Ä–æ–±—ñ–ª–∏ -> "-"
    .replace(/-+/g, '-') // –ø–æ–¥–≤—ñ–π–Ω—ñ –¥–µ—Ñ—ñ—Å–∏ -> –æ–¥–∏–Ω
}

export const Articles: CollectionConfig = {
  slug: 'articles',

  access: {
    create: authenticated,
    delete: authenticated,
    read: anyone,
    update: authenticated,
  },
  admin: {
    useAsTitle: 'title',
  },

  hooks: {
    beforeChange: [
      ({ data }) => {
        if (data.title && !data.slug) {
          data.slug = transliterate(data.title)
        }
        return data
      },
    ],
  },

  fields: [
    {
      
      localized: true,
    },
    {
      name: 'slug',
      type: 'text',
      required: true,
      unique: true,
      admin: {
        description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –∑ title, —è–∫—â–æ –Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ',
      },
    },
    {
      type: 'upload',
      name: 'bg',
      label: 'Background Image',
      relationTo: 'media',
      required: true,
    },
    {
      name: 'category',
      label: 'Category',
      type: 'relationship',
      hasMany: false,
      required: true,
      relationTo: 'article_categories',
    },
    {
      label: 'Description',
      
      localized: true,
    },
    // {
    //   name: 'content',
    //   label: 'Content',
    //   type: 'blocks',
    //   blocks: [List, Paragraph, Heading1, Heading2, Heading3, Heading4, Quote, ImageBlock],
    // },
    {
      name: 'richContent',
      type: 'richText',
      label: '–†–æ–∑—à–∏—Ä–µ–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç',
      editor: lexicalEditor({
        features: ({ defaultFeatures }) => [
          ...defaultFeatures,
          TextSizeFeature({
            // Show a curated list of sizes and allow custom values
            sizes: [
              { value: '12px', label: '12' },
              { value: '14px', label: '14' },
              { value: '16px', label: '16' },
              { value: '18px', label: '18' },
              { value: '20px', label: '20' },
              { value: '24px', label: '24' },
              { value: '28px', label: '28' },
              { value: '32px', label: '32' },
            ],
            method: 'replace',
            customSize: true,
            scroll: true,
          }),
        ],
      }),
    },
  ],
}
