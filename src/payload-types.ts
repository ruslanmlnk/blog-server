/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    articles: Article;
    article_categories: ArticleCategory;
    home: Home;
    about: About;
    contact: Contact;
    press: Press;
    interview: Interview;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    article_categories: ArticleCategoriesSelect<false> | ArticleCategoriesSelect<true>;
    home: HomeSelect<false> | HomeSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    press: PressSelect<false> | PressSelect<true>;
    interview: InterviewSelect<false> | InterviewSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  title: string;
  slug: string;
  bg: number | Media;
  category: number | ArticleCategory;
  description: string;
  content?:
    | (
        | {
            title?: string | null;
            list_items?:
              | {
                  item_title?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'list';
          }
        | {
            text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'paragraph';
          }
        | {
            text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heading1';
          }
        | {
            text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heading2';
          }
        | {
            text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heading3';
          }
        | {
            text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heading4';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article_categories".
 */
export interface ArticleCategory {
  id: number;
  title: string;
  icon?: (number | null) | Media;
  content?:
    | (
        | {
            items?:
              | {
                  article: number | Article;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryOverlayPair';
          }
        | {
            items?:
              | {
                  article: number | Article;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryCardGrid';
          }
        | {
            article: number | Article;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryOverlayHero';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  title: string;
  description: string;
  trends?: {
    title?: string | null;
    items?:
      | {
          article: number | Article;
          id?: string | null;
        }[]
      | null;
  };
  content?:
    | (
        | {
            article: number | Article;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeFeatured';
          }
        | {
            items?:
              | {
                  article: number | Article;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryCardGrid';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  lead: string;
  cards?:
    | {
        title: string;
        text: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  description: string;
  sideImage?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "press".
 */
export interface Press {
  id: number;
  title: string;
  description?: string | null;
  icon?: (number | null) | Media;
  content?:
    | (
        | {
            items?:
              | {
                  article: number | Article;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryOverlayPair';
          }
        | {
            items?:
              | {
                  article: number | Article;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryCardGrid';
          }
        | {
            article: number | Article;
            id?: string | null;
            blockName?: string | null;
            blockType: 'categoryOverlayHero';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "interview".
 */
export interface Interview {
  id: number;
  title: string;
  content?:
    | (
        | {
            href: string;
            title: string;
            subtitle?: string | null;
            image: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'interviewOverlayHero';
          }
        | {
            items: {
              href: string;
              title: string;
              description?: string | null;
              image: number | Media;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'interviewCardGrid';
          }
        | {
            items: {
              href: string;
              title: string;
              image: number | Media;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'interviewOverlayPair';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'article_categories';
        value: number | ArticleCategory;
      } | null)
    | ({
        relationTo: 'home';
        value: number | Home;
      } | null)
    | ({
        relationTo: 'about';
        value: number | About;
      } | null)
    | ({
        relationTo: 'contact';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'press';
        value: number | Press;
      } | null)
    | ({
        relationTo: 'interview';
        value: number | Interview;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  bg?: T;
  category?: T;
  description?: T;
  content?:
    | T
    | {
        list?:
          | T
          | {
              title?: T;
              list_items?:
                | T
                | {
                    item_title?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        paragraph?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        heading1?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        heading2?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        heading3?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
        heading4?:
          | T
          | {
              text?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article_categories_select".
 */
export interface ArticleCategoriesSelect<T extends boolean = true> {
  title?: T;
  icon?: T;
  content?:
    | T
    | {
        categoryOverlayPair?:
          | T
          | {
              items?:
                | T
                | {
                    article?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        categoryCardGrid?:
          | T
          | {
              items?:
                | T
                | {
                    article?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        categoryOverlayHero?:
          | T
          | {
              article?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  trends?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              article?: T;
              id?: T;
            };
      };
  content?:
    | T
    | {
        homeFeatured?:
          | T
          | {
              article?: T;
              id?: T;
              blockName?: T;
            };
        categoryCardGrid?:
          | T
          | {
              items?:
                | T
                | {
                    article?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  lead?: T;
  cards?:
    | T
    | {
        title?: T;
        text?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  sideImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "press_select".
 */
export interface PressSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  icon?: T;
  content?:
    | T
    | {
        categoryOverlayPair?:
          | T
          | {
              items?:
                | T
                | {
                    article?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        categoryCardGrid?:
          | T
          | {
              items?:
                | T
                | {
                    article?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        categoryOverlayHero?:
          | T
          | {
              article?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "interview_select".
 */
export interface InterviewSelect<T extends boolean = true> {
  title?: T;
  content?:
    | T
    | {
        interviewOverlayHero?:
          | T
          | {
              href?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        interviewCardGrid?:
          | T
          | {
              items?:
                | T
                | {
                    href?: T;
                    title?: T;
                    description?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        interviewOverlayPair?:
          | T
          | {
              items?:
                | T
                | {
                    href?: T;
                    title?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}